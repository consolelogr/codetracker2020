{"version":3,"sources":["components/ItemForm/ItemForm.js","components/Graafi/Graafi.js","components/Header.js","components/Koodilaskuri/Koodilaskuri.js","components/Menu/Menu.js","components/testdata.js","App.js","serviceWorker.js","index.js"],"names":["ItemForm","props","state","data","koodityyppi","pvm","kooditunnit","tehot","handleInputChange","bind","handleSubmit","onClickReset","console","log","itemformpropsii","name","hfm","event","target","value","type","checked","this","setState","preventDefault","document","getElementById","className","innerHTML","disabled","setTimeout","onSubmit","onChange","id","onClick","React","Component","Graafi","koodipropsii","propsii","htmltunnit","csstunnit","reacttunnit","jstunnit","gittunnit","htmltehot","csstehot","reacttehot","jstehot","gittehot","graphData","i","length","Number","parseInt","parseFloat","push","koodiyht","tunnityht","tehotyht","width","height","strokeDasharray","dataKey","stackId","fill","dataPointWidth","Header","Fragment","href","rel","Koodilaskuri","koodipropsii2","x","rivit","reverse","map","jotain","key","Menu","to","testdata","App","handleFormSubmit","newdata","storeddata","slice","basename","path","render","itemformpropsii2","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a7cb793a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./itemform.css\";\r\n\r\n/*\r\nfunction ItemForm(itemformpropsii, itemformpropsii2) {\r\n  console.log(\r\n    \"// func Itemform:\",\r\n    itemformpropsii.itemformpropsii,\r\n    itemformpropsii2\r\n  );\r\n  return <h1>itemform</h1>;\r\n}\r\n*/\r\n\r\nclass ItemForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {\r\n        koodityyppi: \"html\",\r\n        pvm: \"2020 01 01\",\r\n        kooditunnit: 1,\r\n        tehot: 0.1,\r\n      },\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onClickReset = this.onClickReset.bind(this);\r\n    console.log(\r\n      \"// I.F. constructor propsii:\",\r\n      this.props.itemformpropsii[0].name,\r\n      this.props.hfm\r\n    );\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    // handle individual changes to state of ITEMFORMS.js\r\n    console.log(\r\n      \"//Itemform - handleInputChange, event.target.value:\",\r\n      event.target.value,\r\n      \"event.target.name:\",\r\n      event.target.name\r\n    );\r\n\r\n    const value =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    const name = event.target.name;\r\n    this.setState({ data: { ...this.state.data, [name]: value } });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // Kun painaa lähetä nappia add.js :ssä tämä käynnistyy\r\n    event.preventDefault();\r\n    console.log(\r\n      \"itemform - handleSubmit, state:, event:\",\r\n      this.state.data,\r\n      event,\r\n      \"// ItemForm:  propsit:\",\r\n      this.state\r\n    );\r\n    console.log(\r\n      \"// pvmdata:\",\r\n      this.state.data.pvm\r\n\r\n      //                 READ REACT BOOK FIRST\r\n      //\r\n      //                        THEN CODE\r\n      //\r\n      //                    => GOOD RESULTS\r\n      //\r\n      //                      OK?\r\n    );\r\n    this.props.hfm(this.state.data);\r\n    \r\n    console.log('//lisää');\r\n        document.getElementById('lisaa').className= 'lisaa2';\r\n        document.getElementById('lisaa').innerHTML= 'Lisätty';\r\n      document.getElementById('lisaa').disabled = true;\r\n      setTimeout(function(){\r\n\r\n    }, 100);\r\n  }\r\n  onClickReset(){\r\n    this.setState({ data: {\r\n      koodityyppi: \"html\",\r\n      pvm: \"1976 01 01\",\r\n      kooditunnit: 1,\r\n      tehot: 0.1,\r\n     } });\r\n     document.getElementById('lisaa').disabled = false;\r\n     document.getElementById('lisaa').className= ('lisaa');\r\n     \r\n     document.getElementById('lisaa').innerHTML= 'Lisää';\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"inputwrap\" >\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"labelbox\">\r\n          <label name=\"koodityyppi\">Koodityyppi</label>\r\n        </div>\r\n        <select\r\n          name=\"koodityyppi\"\r\n          value={this.state.data.koodityyppi}\r\n          onChange={this.handleInputChange}\r\n        >\r\n          <option value=\"html\">html</option>\r\n          <option value=\"css\">css</option>\r\n          <option value=\"js\">js</option>\r\n          <option value=\"react\">react</option>\r\n          <option value=\"git\">git</option>\r\n        </select>\r\n        <br />\r\n        <div className=\"labelbox\">\r\n          <label name=\"pvm\">Päivämäärä</label>\r\n        </div>\r\n        <input\r\n          type=\"date\"\r\n          name=\"pvm\"\r\n          value={this.state.data.pvm}\r\n          onChange={this.handleInputChange}\r\n        ></input>\r\n        <br />\r\n        <div className=\"labelbox\">\r\n          <label name=\"kooditunnit\">Kooditunnit</label>\r\n        </div>\r\n        <select\r\n          name=\"kooditunnit\"\r\n          value={this.state.data.kooditunnit}\r\n          onChange={this.handleInputChange}\r\n        >\r\n          <option value=\"1\">1h</option>\r\n          <option value=\"2\">2h</option>\r\n          <option value=\"3\">3h</option>\r\n          <option value=\"4\">4h</option>\r\n          <option value=\"5\">5h</option>\r\n          <option value=\"6\">6h</option>\r\n          <option value=\"7\">7h</option>\r\n          <option value=\"8\">8h</option>\r\n        </select>\r\n        <br />\r\n        <div className=\"labelbox\">\r\n          <label name=\"tehot\">tehot</label>\r\n        </div>\r\n        <select\r\n          name=\"tehot\"\r\n          value={this.state.data.tehot}\r\n          onChange={this.handleInputChange}\r\n        >\r\n          <option value={0.1 * this.state.data.kooditunnit}>10%</option>\r\n          <option value={0.2 * this.state.data.kooditunnit}>20%</option>\r\n          <option value={0.3 * this.state.data.kooditunnit}>30%</option>\r\n          <option value={0.4 * this.state.data.kooditunnit}>40%</option>\r\n          <option value={0.5 * this.state.data.kooditunnit}>50%</option>\r\n          <option value={0.6 * this.state.data.kooditunnit}>60%</option>\r\n          <option value={0.7 * this.state.data.kooditunnit}>70%</option>\r\n          <option value={0.8 * this.state.data.kooditunnit}>80%</option>\r\n          <option value={0.9 * this.state.data.kooditunnit}>90%</option>\r\n          <option value={1 * this.state.data.kooditunnit}>100%</option>\r\n        </select>\r\n        <br />\r\n        <br />\r\n        <div className=\"buttonbox\"> \r\n        <button type=\"submit\" id=\"lisaa\" >Lisää</button>\r\n        <button type=\"reset\" onClick={this.onClickReset}>Reset</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    ); //return end\r\n  }\r\n}\r\nexport default ItemForm;\r\n","import React from \"react\";\nimport \"./graafi.css\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid } from \"recharts\";\n\nfunction Graafi(koodipropsii) {\n  let propsii = [...koodipropsii.koodipropsii];\n  //propsii[0].unshift( {kooditunnityht: \"testi\" }  );\n  /*let kooditunnit = koodipropsii.koodipropsii[0].kooditunnit.map(\n    (x) => graphData[0].push\n  );*/\n\n  \n  let htmltunnit=0, csstunnit=0, reacttunnit =0, jstunnit =0, gittunnit =0;\n  let htmltehot=0, csstehot=0, reacttehot =0, jstehot =0, gittehot =0;\n  let graphData = [];\n\n  for (var i = 0; i <= propsii.length - 1; i++) {\n    \n      if (propsii[i].koodityyppi === \"html\") {\n      htmltunnit += Number.parseInt(propsii[i].kooditunnit);\n      htmltehot +=  Number.parseFloat(propsii[i].tehot);\n      console.log(\"// html\", htmltunnit,htmltehot);\n    }\n\n    if (propsii[i].koodityyppi === \"css\") {\n      csstunnit += Number.parseInt(propsii[i].kooditunnit);\n      csstehot +=  Number.parseFloat(propsii[i].tehot);\n      console.log(\"// css\", csstunnit,csstehot);\n    }\n    if (propsii[i].koodityyppi === \"react\") {\n      reacttunnit += Number.parseInt(propsii[i].kooditunnit);\n      reacttehot +=  Number.parseFloat(propsii[i].tehot);\n      console.log(\"// html\", reacttunnit,reacttehot);\n    }\n    if (propsii[i].koodityyppi === \"js\") {\n      jstunnit += Number.parseInt(propsii[i].kooditunnit);\n      jstehot +=  Number.parseFloat(propsii[i].tehot);\n      console.log(\"// js\", jstunnit,jstehot);\n    }\n    if (propsii[i].koodityyppi === \"git\") {\n      gittunnit += Number.parseInt(propsii[i].kooditunnit);\n      gittehot +=  Number.parseFloat(propsii[i].tehot);\n      console.log(\"// git\", gittunnit,gittehot);\n    }\n  }\n\n  graphData.push( {koodiyht : \"html\", tunnityht : htmltunnit, tehotyht : htmltehot })\n  graphData.push( {koodiyht : \"css\", tunnityht : csstunnit, tehotyht : csstehot })\n  graphData.push( {koodiyht : \"js\", tunnityht : jstunnit, tehotyht : jstehot })\n  graphData.push( {koodiyht : \"react\", tunnityht : reacttunnit, tehotyht : reacttehot })\n  graphData.push( {koodiyht : \"git\", tunnityht : gittunnit, tehotyht : gittehot })\n\n  \n  /*propsii.push( {htmltunnityht : htmltunnit })\n  propsii.push( {htmltunnityht : htmltunnit })\n  propsii.push( {htmltunnityht : htmltunnit })\n  propsii.push( {htmltunnityht : htmltunnit })*/\n  console.log(propsii);\n  \n\n  /*\n  Väsää toi\n  best = [\n  {koodityyppi: \"html\", kooditunnityht: 0, tehotavg: 0  }\n  ]\n  */\n  return (\n\n    <div className=\"baarit\">\n      <BarChart width={400} height={300} data={graphData}>\n        <CartesianGrid strokeDasharray=\"8 8\" />\n        <XAxis dataKey=\"koodiyht\" />\n        <YAxis dataKey=\"tunnityht\" />\n        <Bar dataKey=\"tunnityht\" stackId=\"a\" fill=\"blue\" />\n        <Bar dataKey=\"tehotyht\" stackId=\"b\" fill=\"#8884d8\" dataPointWidth=\"5\" />\n      </BarChart>\n      \n    </div>\n  );\n} //function Graafi end\n\n\nexport default Graafi;\n","import  React from 'react';\nimport './header.css';\n\nfunction Header(props) {\n\n    return(\n      <React.Fragment >\n      <link href=\"https://fonts.googleapis.com/css?family=Orbitron\" rel=\"stylesheet\" />\n      <header className=\"App-header\"> \n      <h1><span id=\"spanni\"></span> C0DE TRACK<span id=\"spanni\">&#123;</span>R</h1>    \n      </header>\n      </React.Fragment>\n      );\n          }\n  \n  \n  \nexport default Header;","import React from \"react\";\nimport \"./koodilaskuri.css\";\n\nfunction Koodilaskuri(koodipropsii, koodipropsii2) {\n  console.log(\n    \"// Koodilaskuri   propsii\",\n    koodipropsii.koodipropsii,\n    koodipropsii2\n  );\n  let x= 0;\n  let rivit = koodipropsii.koodipropsii.reverse().map((jotain) => {\n    return (\n      <div key={x=x+1} className=\"rivitbox\">\n        <div key=\"key1\" className=\"tyyppi\">{jotain.koodityyppi}</div>\n        <div key=\"key2\" className=\"tyyppi_pvm\"> {jotain.pvm}</div>\n        <div key=\"key3\" className=\"tyyppi_info\"> {jotain.kooditunnit}h </div>\n        <div key=\"key4\" className=\"tyyppi_tehot\">\n          { (jotain.tehot / jotain.kooditunnit) * 100}%\n        </div>\n        <br />\n      </div>\n    );\n  });\n\n  return <div key=\"key5\" className=\"koodilaskuri\">{rivit}</div>;\n}\n\nexport default Koodilaskuri;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { IoIosAdd } from \"react-icons/io\";\nimport { IoMdList } from \"react-icons/io\";\nimport { IoIosBrush } from \"react-icons/io\";\nimport \"./menu.css\";\n\nfunction Menu(props) {\n  return (\n    <div className=\"menu\">\n      <Link to=\"/Koodilaskuri\">\n        <button className=\"nappi\">\n          <IoMdList />{\" \"}\n        </button>\n      </Link>\n      <Link to=\"./ItemForm\">\n        {\" \"}\n        <div className=\"nappi\">\n          {\" \"}\n          <IoIosAdd />\n        </div>\n      </Link>\n      <Link to=\"/Graafi\">\n        {\" \"}\n        <div className=\"nappi\">\n          {\" \"}\n          <IoIosBrush />{\" \"}\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nexport default Menu;\n","const testdata = [\n  {\n    koodityyppi: \"html\",\n    kooditunnit: 1,\n    pvm: \"01/06/2019\",\n    tehot: 0.4,\n  },\n  {\n    koodityyppi: \"html\",\n    kooditunnit: 4,\n    pvm: \"01/06/2019\",\n    tehot: 1.4,\n  },\n  \n  {\n    koodityyppi: \"css\",\n    kooditunnit: 4,\n    pvm: \"01/06/2019\",\n    tehot: 2,\n  },\n  {\n    koodityyppi: \"js\",\n    kooditunnit: 1,\n    pvm: \"01/06/2019\",\n    tehot: 0.7,\n  },\n  {\n    koodityyppi: \"React\",\n    kooditunnit: 8,\n    pvm: \"01/06/2014\",\n    tehot: 2,\n  },\n  {\n    koodityyppi: \"Git\",\n    kooditunnit: 8,\n    pvm: \"01/06/2019\",\n    tehot: 4,\n  },\n];\n\nexport default testdata;\n","import React, { Component } from \"react\";\r\nimport {Redirect, HashRouter, BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport \"./components/Koodilaskuri/koodilaskuri.css\";\r\nimport ItemForm from \"./components/ItemForm/ItemForm\";\r\nimport Graafi from \"./components/Graafi/Graafi.js\";\r\nimport Header from \"./components/Header.js\";\r\nimport Koodilaskuri from \"./components/Koodilaskuri/Koodilaskuri\";\r\nimport Menu from \"./components/Menu/Menu.js\";\r\nimport testdata from \"./components/testdata\";\r\nimport \"./components/header.css\";\r\n \r\n//https://react-icons.netlify.com/#/icons/io  <-- tuolta löytyy ikonit\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: testdata,\r\n    };\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    console.log(\"// App - constructor. props:\", props, this.props);\r\n  }\r\n\r\n  handleFormSubmit(newdata) {\r\n    let storeddata = this.state.data.slice();\r\n    storeddata.push(newdata);\r\n    this.setState({\r\n      data: storeddata,\r\n    });\r\n    console.log(\"// App - handleForm Submit\", storeddata);\r\n  }\r\n\r\n  render() {\r\n    //App.js returns this thing below\r\n\r\n    return (\r\n      <Router basename='/'>\r\n<Redirect to=\"/koodilaskuri\" />\r\n          <Header />\r\n        <div className=\"wrap\">\r\n\r\n          <div className=\"box\">\r\n            <Route\r\n              path=\"/ItemForm\"\r\n              render={(props) => (\r\n                <ItemForm\r\n                  {...props}\r\n                  itemformpropsii={this.state.data}\r\n                  itemformpropsii2={\"hei\"}\r\n                  hfm={this.handleFormSubmit}\r\n                />\r\n              )}\r\n            ></Route>\r\n\r\n            <Route\r\n              path=\"/Koodilaskuri\"\r\n              render={(props) => (\r\n                <Koodilaskuri\r\n                  {...props}\r\n                  koodipropsii={this.state.data}\r\n                  koodipropsii2={\"hei\"}\r\n                  hfm={this.handleFormSubmit}\r\n                />\r\n              )}\r\n            ></Route>\r\n\r\n            <Route\r\n              path=\"/Graafi\"\r\n              render={(props) => (\r\n                <Graafi {...props} koodipropsii={this.state.data} />\r\n              )}\r\n            ></Route>\r\n          </div>\r\n          <Menu />\r\n        </div>\r\n      </Router>\r\n    );\r\n  } //And stops rendering right here. It sticks it in Index.js -> /public/index.html -> root div\r\n}\r\n\r\nexport default App;\r\n/*  onFormSubmit={props.handleSubmit}\r\n */\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}